<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.lestard</groupId>
	<artifactId>snakefx</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>snakefx</name>

	<organization>
		<name>Manuel Mauky</name>
	</organization>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<finalName>snakefx</finalName>
		<defaultGoal>clean jfx:build-jar</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>
					<mainClass>eu.lestard.snakefx.Launcher</mainClass>

					<title>SnakeFX</title>
					<description>A Snake game created with JavaFX</description>

					<homepage>http://www.lestard.eu</homepage>

					<executableJarFileName>SnakeFX.jar</executableJarFileName>
				</configuration>
			</plugin>

			<!-- This configuration is used because my tests were failing when running
				them with my sonar server. This stackoverflow answer helped: http://stackoverflow.com/a/9583305/804451 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<argLine>-XX:-UseSplitVerifier</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- JavaFX2 is not in the public maven repository :-( A workaround is
			to specify the javafx lib as system scoped dependency.

			It is assumed that JAVA_HOME is pointing to Oracles JDK. -->
		<dependency>
			<groupId>javafx</groupId>
			<artifactId>javafx</artifactId>
			<version>2.2.1</version>
			<scope>system</scope>
			<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
			<version>2.0M8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>


	</dependencies>


</project>